services:
  db:
    image: postgres:16
    container_name: website-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./data/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
  s3:
    image: minio/minio
    restart: unless-stopped
    container_name: website-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${S3_USER}
      MINIO_ROOT_PASSWORD: ${S3_PASSWORD}
    volumes:
      - ./data/s3:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 9000:9000
      - 9001:9001
  create-bucket:
    image: minio/mc
    depends_on:
      s3:
        condition: service_healthy
    restart: no
    container_name: website-create-bucket
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://website-minio:9000 ${S3_USER} ${S3_PASSWORD};
      /usr/bin/mc mb minio/${S3_NAME} --ignore-existing;
      exit 0;
      "
